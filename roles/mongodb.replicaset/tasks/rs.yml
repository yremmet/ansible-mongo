---

- name: Get Replicaset Status
  community.mongodb.mongodb_status:
    replica_set: "{{repl_set_name}}"
    login_database: admin
    login_user: "{{mongodb_admin_user}}"
    login_password: "{{mongodb_admin_pwd}}"
    login_host: "{{ groups[mongod_group][0] }}"
    ssl: true
    ssl_ca_certs: "{{mongodb_certificate_ca_file}}"
    ssl_certfile: "{{mongodb_certificate_key_file}}"
    ssl_keyfile: "{{mongodb_certificate_key_file}}"
  register: rs
  ignore_errors: yes
  run_once: yes

- set_fact:
    primary: "{{ item.key.split('.')[0] }}"
  loop: "{{ lookup('dict', rs.replicaset) }}"
  when: "not rs.failed and 'PRIMARY' in item.value"
  run_once: yes

- debug: 
    msg: "mongo {{inventory_hostname}} -> {{ groups[mongod_group].index(inventory_hostname) }}"
  when: arbiter is defined and arbiter
- name: Initialzize Replicaset on new Cluster
  when: primary is not defined and ansible_hostname == groups[mongod_group][0].split(".")[0]
  block:
    - name: Initialise MongoDB Replicaset
      community.mongodb.mongodb_replicaset:
        login_database: "admin"
        login_host: localhost
        replica_set: "{{repl_set_name}}"
        debug: true
        members: '{{groups[mongod_group]}}'
      register: repl

    - name: Ensure replicaset has reached a converged state
      community.mongodb.mongodb_status:
        replica_set: "{{repl_set_name}}"
        poll: 10
        interval: 10

    - name: Import mongodb_auth role
      include_role:
        name: community.mongodb.mongodb_auth

- name: Update Replicaset 
  when: primary is defined and ansible_hostname == primary
  block:
    - name: Update MongoDB Replicaset
      community.mongodb.mongodb_replicaset:
        login_database: admin
        login_user: " {{mongodb_admin_user}}"
        login_password: "{{mongodb_admin_pwd}}"
        login_host: "{{primary.split('.')[0]}}"
        ssl: yes
        replica_set: "{{repl_set_name}}"
        ssl_ca_certs: "/opt/mongo/ca.pem"
        ssl_certfile: "/opt/mongo/mongod.pem"
        ssl_keyfile: "/opt/mongo/mongod.pem"
        debug: true
        members: '{{groups[mongod_group]}}'
      register: repl
    

